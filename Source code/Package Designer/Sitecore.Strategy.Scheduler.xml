<project>
  <Metadata>
    <metadata>
      <PackageName>Sitecore.Strategy.Scheduler</PackageName>
      <Author>Edvin Eshagh</Author>
      <Version>1.0.0</Version>
      <Revision />
      <License />
      <Comment>This contribution adds pipeline processes to scheduling, and extends scheduling options from this:

	&lt;agent interval="days.hh:mm:ss" .../&gt;
to this:

	&lt;agent interval="startTimeStamp|endTimeStamp|DaysOfWeek|durationOrTime" ... /&gt;  

Below is an example of an agent declaration within a configuration patch file:

	&lt;agent name="..."
           type="..." 
           method="..."
		   executionPriority="..." 
           interval="..." /&gt;

## `name` attribute ##
The `name` attribute is a unique agent identifier.  If omitted, then the `type` is used as the agent identifier.  If multiple agents are defined with the same name, then a sequential numeric value is  appended to the name to insure a uniqueness.  This name is visible in `/Data/logs/SchedulerAgentsLastRun.log` file, which is used to keep track of last execution run time in the event the web worker process is recycled.  The log file path is configured in `Sitecore.Strategy.Schedulre.config` file under `scheduling/agentExecutionRepository`.

## `type` and `method` attribute ##
The `type` attribute is the agent type that shall be used for schduler, and the `method` specifies the method name that shall be invoked.  These two attributes are required.

## `executionPriority` attribute ##
The `executionPriority` is an optional property that handles the execution order of agents.  The `executionPriority` is an integer value that is assigned to agents based on their ordinal position (starting from 0).  If multiple agents are scheduled to run at a specific time, then they are executed in the order specified by this property.  The execution order can be changed by either changing the order in which agents are defined within the configuration file or by explicitly specifying the execution order.  Agents are executed from smallest to the largest execution priority value. Negative values for this property are permitted. 

## `interval` attribute ##
As mentioned, the interval is extended from this:

	&lt;agent interval="days.hh:mm:ss" .../&gt;
to:

	&lt;agent interval="startTimeStamp|endTimeStamp|DaysOfWeek|durationOrTime" ... /&gt;  

 This attributes is a required attribute, which contains either sleep duration between agent executions or the execution time of the day.  You may recognize the new format from Sitecore content tree item `/sitecore/system/Tasks/Schedules/*` scheduler field.  Internally, the module uses Sitecore.Tasks.Recurrence to parse the interval string pattern, which is a pipe delimited values for: `startTimeStamp|endTimeStamp|DaysOfWeek|durationOrTime`.  Below are examples, of agents running every 15 minutes:

	&lt;agent interval="00:15:00" /&gt;

	&lt;agent interval="|||00:15:00" /&gt;

	&lt;agent interval="now|||00:15:00" /&gt;

	&lt;agent interval="2000-12-31T23:59:59Z||0|00:15:00" ... /&gt;

The ***startTimeStamp*** and ***endTimeStamp*** are [iso time](https://en.wikipedia.org/wiki/ISO_8601 "ISO 8601") format, which can make use of constant strings `today`, `now`, `tomorrow`, `yesterday`.  For example, *you can disable an agent by setting the end time stamp to `yesterday`* instead of changing the sleep duration to zero.   Note that the start time of the last entry from above example contains the optional **Z** suffix for start time, which designates zero Utc offset; otherwise, the time is checked against the local server time. If the value for start and end time stamps are excluded (e.g. "|||00:15:00") then they are set to `DateTime.MinValue` and `DateTime.MaxValue` respectively.

The start time stamp plays an important role in scheduling, as it is used to determine the next agent execution time.  For example, if you want to execute the agent every hour at 7 minutes past the hour then you would put your initial start time to be 7 minutes past the hour. The following example demonstrates such functionality:

	&lt;agent interval="0001-01-01T00:07:00Z|||01:00:00" ... /&gt; 

The ***DaysOfWeek*** (after 2nd pipe) value represents days of the week, which is compared against the Utc day if the start time uses Utc **Z** suffix designation (like above example); otherwise, the day of the week is evaluated based on server time. 
The days of the week is a numeric value, where `Everyday=0`, `Sun=1`, `Mon=2`, `Tue=4`, `Wed=8`, `Thu=16`, `Fri=32`, `Sat=64`.  If this value is omitted, then it is defaulted to `0` to denote every day. You can sum these numbers to get the desired days.  For example, to run a publisher agent on weekends (sat=64 + sun=1 = 65) at exactly 1:00 `am`, we would use the following format:

	&lt;agent interval="||65|@01:00:00" ... /&gt;

The last entry of the interval attribute, ***DurationOrTime***, is either agent sleep duration or scheduled time of the day for execution.  If this field is prefixed by the symbol **@** (like above example), then it is interpreted as a specific execution  time; otherwise, it is interpreted as an interval, which is a .NET [TimeSpan](https://msdn.microsoft.com/en-us/library/ee372286(v=vs.110).aspx "TimeSpan"). Also note that the above example excludes the start time stamp; therefore, the day of the week comparison is done against local server time.

Below example will execute agents at 4 `am` because the `@` prefix is included:

	&lt;agent interval="@4:00:00" .../&gt;
	&lt;agent interval="|||@04:00:00" .../&gt;
	&lt;agent interval="now||0|@04:00:00" .../&gt;  

where as the following examples will execute agents every 4 hours because the `@` symbol is omitted:

	&lt;agent interval="4:00:00" .../&gt;
	&lt;agent interval="|||04:00:00" .../&gt;
	&lt;agent interval="now||0|04:00:00" .../&gt;  


# &lt;a name="Example"&gt;&lt;/a&gt; 4. Example #
### 1. Configuration path file example ###

	&lt;configuration xmlns:patch="http://www.sitecore.net/xmlconfig/"&gt;
	  &lt;sitecore&gt;
	    &lt;scheduling&gt;
		  &lt;!-- Simple agent 
		  --&gt;
	      &lt;agent name ="AA11"
	             type="Sitecore.Strategy.Scheduler.Example.LoggerAgent, Sitecore.Strategy.Scheduler.Example"
	             method="Run"
	             interval="00:00:20"&gt;
	             &lt;param desc="messageToLog"&gt;====AAAA===== Test Log &lt;/param&gt; 
	      &lt;/agent&gt;
	      
	      &lt;!-- This agent runs first because of the executionPriority attribute
		  --&gt;
	      &lt;agent name="BB22"
	             type="Sitecore.Strategy.Scheduler.Example.LoggerAgent, Sitecore.Strategy.Scheduler.Example" 
	             method="Run" 
	             interval="00:00:30"
	             executionPriority="-1"&gt;
	              &lt;param desc="messageToLog"&gt;====BBBB===== Test Log &lt;/param&gt;
	      &lt;/agent&gt;
	
	      &lt;!-- This agent runs on Friday at 2:00 pm server time
		  --&gt;
	      &lt;agent name="CC33"
	             type="Sitecore.Strategy.Scheduler.Example.LoggerAgent, Sitecore.Strategy.Scheduler.Example"
	             method="Run"
	             interval="||16|@14:00:00"&gt;
	             &lt;param desc="messageToLog"&gt;====DDDD===== Test Log &lt;/param&gt;
	      &lt;/agent&gt;
	
	      &lt;!-- Run agent every 15 minutes pass the hour.  
 			   To use Utc time add the "Z" suffix to start time. 
          --&gt;
	      &lt;agent name="DD44"
	             type="Sitecore.Strategy.Scheduler.Example.LoggerAgent, Sitecore.Strategy.Scheduler.Example"
	             method="Run"
	             interval="0001-01-01T00:15:00|||01:00:00"&gt; 
	             &lt;param desc="messageToLog"&gt;====DDDD===== Test Log &lt;/param&gt;
	      &lt;/agent&gt;
	    &lt;/scheduling&gt;
	  &lt;/sitecore&gt;
	&lt;/configuration&gt;

### 2. Agent processor example ###

	namespace Sitecore.Strategy.Scheduler.Example
	{
	    public class LoggerAgent
	    {
	        private readonly string _messageToLog ;
	
	        private int _counter = 0;
	
	        public LoggerAgent(string messageToLog)
	        {
	            _messageToLog = messageToLog;
	        }
	
	        public void Run()
	        {
	            Sitecore.Diagnostics.Log.Info(string.Format(
					"{0}{1}",_messageToLog, ++_counter), this);
	        }
	    }
	}</Comment>
      <Attributes />
      <Readme />
      <Publisher />
      <PostStep />
      <PackageID />
    </metadata>
  </Metadata>
  <SaveProject>True</SaveProject>
  <Sources>
    <xfiles>
      <Entries>
        <x-item>/App_Config/Include/Sitecore.Strategy.Scheduler.config</x-item>
        <x-item>/bin/Sitecore.Strategy.Scheduler.dll</x-item>
      </Entries>
      <Converter>
        <FileToEntryConverter>
          <Root>/</Root>
          <Transforms>
            <InstallerConfigurationTransform>
              <Options>
                <BehaviourOptions>
                  <ItemMode>Undefined</ItemMode>
                  <ItemMergeMode>Undefined</ItemMergeMode>
                </BehaviourOptions>
              </Options>
            </InstallerConfigurationTransform>
          </Transforms>
        </FileToEntryConverter>
      </Converter>
      <Include />
      <Exclude />
      <Name>Source &amp; config files</Name>
    </xfiles>
  </Sources>
  <Converter>
    <TrivialConverter>
      <Transforms />
    </TrivialConverter>
  </Converter>
  <Include />
  <Exclude />
  <Name />
</project>
