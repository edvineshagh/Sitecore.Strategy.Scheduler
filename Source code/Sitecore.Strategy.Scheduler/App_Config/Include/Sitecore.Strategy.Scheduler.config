<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    
    <pipelines>
      <initialize>
        <processor type="Sitecore.Strategy.Scheduler.Pipelines.StartScheduler, Sitecore.Strategy.Scheduler"
                   patch:instead="processor[@type='Sitecore.Pipelines.Loader.InitializeScheduler, Sitecore.Kernel']" />
      </initialize>      

      
      
      <group groupName="scheduler">

        <pipelines>
        
          <!-- 
              Initializes the scheduler by loading all agents to execute.
            -->
          <scheduler.start
            argsType="Sitecore.Strategy.Scheduler.Pipelines.SchedulerArgs, Sitecore.Strategy.Scheduler">

            <processor type="Sitecore.Strategy.Scheduler.Pipelines.SchedulerInitialization.LoadAgents, Sitecore.Strategy.Scheduler" />
            <processor type="Sitecore.Strategy.Scheduler.Pipelines.SchedulerInitialization.GetAgentLastRunTimes, Sitecore.Strategy.Scheduler" />

          </scheduler.start>

          <!--
              Execute all agents that scheduled execution time has been reached/or exceeded.
              Then sleep the worker thread until the next agent execution time is reached.
            -->
          <scheduler.threadWorkerLoop
            argsType="Sitecore.Strategy.Scheduler.Pipelines.SchedulerArgs, Sitecore.Strategy.Scheduler">

            <processor type="Sitecore.Strategy.Scheduler.Pipelines.WorkerLoop.InitializeExecutedList, Sitecore.Strategy.Scheduler" />
            <processor type="Sitecore.Strategy.Scheduler.Pipelines.WorkerLoop.ExecuteAgents, Sitecore.Strategy.Scheduler" />
            <processor type="Sitecore.Strategy.Scheduler.Pipelines.WorkerLoop.ResetExecutionPriority, Sitecore.Strategy.Scheduler" />
            <processor type="Sitecore.Strategy.Scheduler.Pipelines.WorkerLoop.FlushAgentRuntimeToRepository, Sitecore.Strategy.Scheduler" />
            <processor type="Sitecore.Strategy.Scheduler.Pipelines.WorkerLoop.SchedulerWait, Sitecore.Strategy.Scheduler" />

          </scheduler.threadWorkerLoop>

          <!--
              Execute scheduled agent
            -->
          <scheduler.executeAgent
            argsType="Sitecore.Strategy.Scheduler.Pipelines.AgentExecution.ExecuteAgentArgs, Sitecore.Strategy.Scheduler">
            <processor type="Sitecore.Strategy.Scheduler.Pipelines.AgentExecution.CanExecuteAgent, Sitecore.Strategy.Scheduler" />
            <processor type="Sitecore.Strategy.Scheduler.Pipelines.AgentExecution.ExecuteAgent, Sitecore.Strategy.Scheduler" />
          </scheduler.executeAgent>

        </pipelines>
      </group>   
    
    </pipelines>


  <scheduling>

    <factory type="Sitecore.Strategy.Scheduler.SchedulerFactory, Sitecore.Strategy.Scheduler" />

    <!--
      Store/retrieve the last execution times of agents so that during application restart the 
      last execution time is preserved.  For debugging purposes, you may set the second parameter to true,
      to append execution times to repository.
    -->
    <agentExecutionRepository type="Sitecore.Strategy.Scheduler.Model.AgentExecutionRepository, Sitecore.Strategy.Scheduler" >
      <param desc="data file used to re/store lastRuntime for each agent">$(LogFolder)/SchedulerAgentsLastRun.log</param>
      <param type="System.Boolean" factoryMethod="Parse" arg0="false" desc="append to log file" />
    </agentExecutionRepository>


  </scheduling>
  
  
  </sitecore>

</configuration>
